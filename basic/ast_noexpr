Building builtin -> /home/benjbrannick/Documents/Pony/ponyc/packages/builtin
Building ../Pony-experiments/basic -> /home/benjbrannick/Documents/Pony/Pony-experiments/basic
(package:scope
  (module:scope
    (use x "builtin" x)
    (actor:scope
      (id Main)
      x
      tag
      x
      (members
        (new:scope
          tag
          (id create)
          x
          (params (param (id env) (nominal (id $0) (id Env) x val x x) x))
          (nominal (id $1) (id Main) x tag ^ x)
          x
          (seq
            (=
              (qualify
                (reference (id MyClass))
                (typeargs
                  (nominal (id $0) (id U32) x val x x)
                  (nominal (id $0) (id String) x val x x)
                )
              )
              (let ((id x) [infer]) x [infer])
            )
            (call
              (positionalargs (seq "Hello world"))
              x
              (. (. (reference (id env)) (id out)) (id print))
            )
          )
          x
          x
        )
      )
      x
      x
    )
    (class:scope
      (id MyClass)
      (typeparams
        (typeparam (id X) (typeparamref (id X) #any x) x)
        (typeparam (id Y) (typeparamref (id Y) #any x) x)
      )
      ref
      x
      (members
        (new:scope
          ref
          (id create)
          x
          x
          (nominal
            (id $1)
            (id MyClass)
            (typeargs
              (typeparamref (id X) #any x)
              (typeparamref (id Y) #any x)
            )
            ref
            ^
            x
          )
          x
          (seq "")
          x
          x
        )
      )
      x
      x
    )
  )
)

